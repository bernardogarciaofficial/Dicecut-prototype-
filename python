import cv2
import pyaudio
import wave
import threading
import time
import ffmpeg
import os

# CONFIGURATION
AUDIO_FILENAME = "output_audio.wav"
VIDEO_FILENAME = "output_video.avi"
FINAL_OUTPUT = "final_output.mp4"
FRAME_WIDTH = 1280
FRAME_HEIGHT = 720
FPS = 30
RECORD_SECONDS = 10

# AUDIO SETUP
audio_format = pyaudio.paInt16
channels = 1
rate = 44100
chunk = 1024

# VIDEO SETUP
fourcc = cv2.VideoWriter_fourcc(*'XVID')
video_out = cv2.VideoWriter(VIDEO_FILENAME, fourcc, FPS, (FRAME_WIDTH, FRAME_HEIGHT))

def record_audio():
    try:
        pa = pyaudio.PyAudio()
        stream = pa.open(format=audio_format, channels=channels, rate=rate, input=True, frames_per_buffer=chunk)
        print("üéôÔ∏è Recording audio...")
        frames = []

        for _ in range(0, int(rate / chunk * RECORD_SECONDS)):
            data = stream.read(chunk)
            frames.append(data)

        print("‚úÖ Audio recording finished.")
        stream.stop_stream()
        stream.close()
        pa.terminate()

        wf = wave.open(AUDIO_FILENAME, 'wb')
        wf.setnchannels(channels)
        wf.setsampwidth(pa.get_sample_size(audio_format))
        wf.setframerate(rate)
        wf.writeframes(b''.join(frames))
        wf.close()
    except Exception as e:
        print(f"‚ùå Error during audio recording: {e}")

def record_video():
    try:
        cap = cv2.VideoCapture(0)
        cap.set(cv2.CAP_PROP_FRAME_WIDTH, FRAME_WIDTH)
        cap.set(cv2.CAP_PROP_FRAME_HEIGHT, FRAME_HEIGHT)
        print("üìπ Recording video...")

        start_time = time.time()
        while int(time.time() - start_time) < RECORD_SECONDS:
            ret, frame = cap.read()
            if not ret:
                break
            video_out.write(frame)
            cv2.imshow("Recording...", frame)
            if cv2.waitKey(1) == ord('q'):
                break

        print("‚úÖ Video recording finished.")
        cap.release()
        video_out.release()
        cv2.destroyAllWindows()
    except Exception as e:
        print(f"‚ùå Error during video recording: {e}")

def combine_audio_video():
    try:
        print("üéûÔ∏è Combining audio and video
